name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Compose services
        run: docker compose -f deploy/local/docker-compose.yml build

      - name: Start Docker Compose services
        run: docker compose -f deploy/local/docker-compose.yml up -d

      # - name: Run database migrations (optional)
      #   run: docker compose -f deploy/local/docker-compose.yml exec -T api npm run migration:run # Если используешь миграции
      #   continue-on-error: true # Пропускаем, если миграции не нужны

      - name: Run tests
        run: docker compose -f deploy/local/docker-compose.yml exec -T api npm run test
        continue-on-error: true # Пропускаем, если тестов пока нет

      - name: Stop Docker Compose services
        run: docker compose -f deploy/local/docker-compose.yml down

  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./services/api
  #         file: ./services/api/Dockerfile
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKER_USERNAME }}/music-app-api:${{ github.ref == 'refs/heads/main' && 'latest' || 'develop' }}
